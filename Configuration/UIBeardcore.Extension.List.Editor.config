<?xml version="1.0"?>
<!-- This is a bare configuration for a Tridion.Web editor -->
<Configuration xmlns="http://www.sdltridion.com/2009/GUI/Configuration/Merge"
               xmlns:cfg="http://www.sdltridion.com/2009/GUI/Configuration"
               xmlns:ext="http://www.sdltridion.com/2009/GUI/extensions"
			   xmlns:list="http://www.sdltridion.com/2009/GUI/extensions/List"
               xmlns:cmenu="http://www.sdltridion.com/2009/GUI/extensions/ContextMenu">

	<!--
		The SDL Tridion GUI uses a merging technique to minimize the amount of calls done by the client
		for static files (like .css and .js file).
		The files can be grouped and will be merged per group (if merging is enabled on the group)
		For debugging purposes the merging behavior can be switched off by setting the merge attribute to false.
	-->
	<resources>
		
		<cfg:filters />

		<cfg:extensiongroups >
			<cfg:extensiongroup name="UIBeardcore.Editors.Extensions.ListTranslators">
				<cfg:extension target="Tridion.Web.UI.Editors.CME.commands">
					<cfg:insertafter>UIBeardcore.Editors.ListExtensions.Translators</cfg:insertafter>
				</cfg:extension>
			</cfg:extensiongroup>


		</cfg:extensiongroups>

		<cfg:groups>
			<cfg:group name="UIBeardcore.Editors.ListExtensions.Translators">
				<cfg:fileset>
					<cfg:file type="script">/Scripts/ListExtensions/Translators.js</cfg:file>
				</cfg:fileset>
			</cfg:group>
		</cfg:groups>
		
	</resources>

	<definitionfiles>
		<!-- List definitions -->
	</definitionfiles>

	<!--
		The SDL Tridion GUI allows for additions, manipulations and removal of items within the GUI through
		the 'extension methodology'.

		Below is the configuration section for those extensions.
		These configuration sections can be defined inline or external (if the externaldefinition is used, all
		inline content is ignored!)
	-->
	<extensions>
		<ext:editorextensions>
			<ext:editorextension target="CME">
				<ext:editurls />
				
				<!-- Defines the item type ID pattern to list definition URL association extensions -->
				<ext:listdefinitions>

					<!-- The `view` element hold the name of the view for which this list definition is applicable. * (Asterics) means all views
						@name attribute defines the Name of a view (* for all views)
					-->
					<view name="BeardcoreView">

						<!--The `control` element holds the name of the control for which this list definition is applicable. * (Asterics) means all controls
							@id attribute defines the ID of a control (* for any control id)
						-->
						<control id="BeardcoreItems">

							<!-- The `listdefinition` element holds the path and filename of the list definition xml file to use
								@idmatch attribute holds the pattern used to match against incoming requests
								@url attribute holds the list definition file (relative to the project's root)
								@handler attribute holds a handler to resolve the list header xml-->
							<listdefinition 
								idmatch="^beardcore:\d+*$" 
								url="/Xml/ListDefinitions/Items.xml"/>
						</control>
					</view>
				</ext:listdefinitions>

				<ext:itemicons />
				<ext:taskbars />
				<ext:commands />
				<ext:commandextensions/>
				<ext:contextmenus />
				<!-- The `lists` element is the container for the list extensions -->
				<ext:lists>

					<!-- The `add` element is the container for all extension being added to the runtime -->
					<ext:add>

						<!-- Defines an extension to add to the runtime
							@assignid Uniq ID of the extension
							@name Defines the extension name 
							@insertbefore Extension location. The elemend before which the extension element will be placed
						-->
						<ext:extension assignid="UIBeardcore.Lists.AddedExtendedColumn" 
									   name="UIBeardcore.Lists.AddedExtendedColumn" 
									   insertbefore="NamedType">

							<!--The `listDefinition` element is the container for a single list definition-->
							<ext:listDefinition>
								<!-- The `selectornamespaces` element is the container for selection prefix-namespaceURI associations -->
								<ext:selectornamespaces>
									<!-- Defines a single prefix-namespaceURI association -->
									<list:namespace prefix="tcm" 
													uri="http://www.tridion.com/ContentManager/5.0"/>
								</ext:selectornamespaces>

								<!-- The `columns` element is the container for column definitions -->
								<ext:columns>
									<!-- Defines a single column in a list 
									  @id the column ID
									  @type the type of the column either literal(default, not a part of definition) or checkbox|icon|data
									  @selector the column selector
									  @alternateSelector the selector used if main selection did not return a value
									  @width defines a column width
									  @dictionary defined a dictionari associated with the value
									  @title the column title
									  @translate defines a client side translators
									  @enableresizing defines if this column might be resized, default "true"
									  @enablesorting defines if sorting can be performed by this field, default "true"
									  @enablefiltering defines if filtering  can be performed by this field, default "true"
									  @columnfilter defined filtering type, might be either daterange|value|group
									  @path icon path [DEPRECATED]
									  @extension icon extension [DEPRECATED]
									-->
									
									<list:column
										id="PercentageTitle"
										type="data"
										title="%"
										selector="@Title"
										width="50"
										columnfilter="group"
										enableresizing="false"
										translate="UIBeardcore.Editors.ListExtensions.Translators.BeardcoreTranslator"
										/>

									<list:column
										id="PercentageTitleVisualization"
										type="data"
										title=""
										selector="@Title"
										width="100"
										enablesorting="false"
										enablefiltering="false"
										enableresizing="false"
										translate="UIBeardcore.Editors.ListExtensions.Translators.BeardcoreTranslatorColor"
										/>

								</ext:columns>
								
							</ext:listDefinition>

							<!-- The `dependencies` element is the container for resource group dependencies for this extension -->
							<ext:dependencies>
								<cfg:dependency>UIBeardcore.Editors.ListExtensions.Translators</cfg:dependency>
							</ext:dependencies>

							<!-- The `apply` element defines the applicability for this extension -->
							<ext:apply>
								<ext:view name="DashboardView">
									<ext:control id="FilteredItemsList" />
								</ext:view>
							</ext:apply>
						</ext:extension>
					</ext:add>
				</ext:lists>
				<ext:xslstylesheetextensions />
				<ext:deckpages />
				<ext:tabpages />
				<ext:toolbars />
				<ext:ribbontoolbars/>
				<ext:extendedareas />
				<ext:optionspanels />
			</ext:editorextension>
		</ext:editorextensions>
		<ext:dataextenders />
		<ext:resourceextensions/>
	</extensions>

	<!--
		The SDL Tridion GUI uses a 'Command' pattern for the commands executed whenever a user
		interacts with the system.

		Below are all the available commands specified and the file that holds the actual implementation of that command.
	-->
	<commands />
	
	<contextmenus />
	
	<widgetsviews />
	
	<localization />

	<settings>
		<dependencies>
			<editor>CME</editor>
		</dependencies>
		<defaultpage/>
		<editurls/>

		<!-- Defines the item type ID pattern to list definition URL association extensions -->
		<listdefinitions>
			<!-- The `view` element hold the name of the view for which this list definition is applicable. * (Asterics) means all views
				@name attribute defines the Name of a view (* for all views)
			-->
			<view name="BeardcoreView">
				<!--The `control` element holds the name of the control for which this list definition is applicable. * (Asterics) means all controls
					@id attribute defines the ID of a control (* for any control id)
				-->
				<control id="ItemsList">
					<!-- The `listdefinition` element holds the path and filename of the list definition xml file to use
						@idmatch attribute holds the pattern used to match against incoming requests
						@url attribute holds the list definition file (relative to the project's root)
						@handler attribute holds a handler to resolve the list header xml
					-->
					<listdefinition
						idmatch="^beardcore:.*$"
						url="/Xml/ListDefinitions/BeardcoreItems.xml"/>
				</control>
			</view>
		</listdefinitions>
		
		<itemicons />
		<theme>
			<path>/Themes/</path>
		</theme>
		<resourceextensions >
			<resourceextension>UIBeardcore.Editors.Extensions.ListTranslators</resourceextension>
		</resourceextensions>
		<customconfiguration />
	</settings>

</Configuration>
